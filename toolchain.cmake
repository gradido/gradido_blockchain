set(CMAKE_C_COMPILER zig cc)
set(CMAKE_CXX_COMPILER zig c++)
set(CMAKE_C_COMPILER_TARGET ${TARGET})
set(CMAKE_CXX_COMPILER_TARGET ${TARGET})

#set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

if( "${TARGET}" STREQUAL "aarch64-linux-gnu" AND
    (NOT CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL "aarch64" OR NOT CMAKE_HOST_SYSTEM_NAME STREQUAL "Linux"))
  # CROSS COMPILING FOR ARM64 LINUX ON NON-ARM64 OR NON-LINUX HOST
  message(STATUS "Cross compiling for arm64-linux-gnu")
  set(CMAKE_SYSTEM_NAME Linux)          # Target OS
  set(CMAKE_SYSTEM_PROCESSOR aarch64)  # Target CPU
  if (LINUX)
    find_program(QEMU_AARCH64_EXECUTABLE qemu-aarch64)
    if(QEMU_AARCH64_EXECUTABLE)
      set(CMAKE_CROSSCOMPILING_EMULATOR ${QEMU_AARCH64_EXECUTABLE})
    endif()
  endif()
endif()

if ("${TARGET}" STREQUAL "x86_64-windows" AND
    (NOT CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL "x86_64" OR NOT CMAKE_HOST_SYSTEM_NAME STREQUAL "Windows"))
  # CROSS COMPILING FOR X64 WINDOWS ON NON-X64 HOST
  set(CMAKE_SYSTEM_NAME Windows)          # Target OS
  set(CMAKE_SYSTEM_PROCESSOR x86_64)     # Target CPU
endif()
